6^3
216/27
sqrt(108)
108^3
sqrt(108^3)
108^(1/3)
sqrt(432)
4+121
sqrt(125)
125^(1/5)
125^(1/6)
A = matrix(c(0,0,1,0,1,0,1,0,0),3,byrow=T)
A
?eingvector
?eigenvector
??eigenvector
eigen(A)
eigen(A,symmetric=F)
?cbind
eigen(A)
A = matrix(c(0,0,1,0,1,0,1,0,0),3,byrow=T)
A = matrix(c(0,0,1,0,2,0,3,0,0),3,byrow=T)
A
eigen(A)
??eigenvalues
??eigen
A = matrix(c(0,0,1,0,1,0,1,0,0),3,byrow=T)
A
eigen(A)
summary(A)
setwd(C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities)
setwd("C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities")
system(main.exe)
system(arquivo)
source('~/.active-rstudio-document')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
install.packages("igraph")
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
?replace
??replace
?readLines
parametros = readLines("parameters.dat", -1)
parametros
parametros[32] = "100\t"
parametros[37] = "0.2\t"
writeLines(parametros,"parameters.dat")
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
parametros = readLines("parameters.dat", -1)
parametros[32] = "100\t#number of nodes"
writeLines(parametros,"parameters.dat")
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
parametros = readLines("parameters.dat", -1)
writeLines(parametros,"parameters.dat")
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
??isgraph
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
is.graph(grafoInicial)
g <- graph.ring(10)
is.igraph(g)
is.igraph(numeric(10))
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
is.graph(grafoInicial)
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
?vetex
??vertex
??nv
grafoInicial$n
grafoInicial$nV
??degre
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
grafoInicial = criarGrafoInicial()
vcount(grafoInicial)
test_file("testDynamicalCommunities.R", reporter = "minimal")
test_file("testDynamicalCommunities.R", reporter = "minimal")
degre(grafoInicial)
degree(grafoInicial)
mean(degree(grafoInicial))
max(degree(grafoInicial))
?range
degre.distribution(grafoInicial)
degree.distribution(grafoInicial)
degree.distribution(grafoInicial,cumulative=T)
??mixing
g = grafoInicial
nc = length(unique(V(g)$p))
nv = length(V(g)$p[V(g)$p==i])
i =1
nv = length(V(g)$p[V(g)$p==i])
nv = V(g)$p[V(g)$p==i]
nv
nv = V(g)[V(g)$p==i]
nv
nv = as.matrix(V(g)[V(g)$p==i])
nv = as.vector(V(g)[V(g)$p==i])
for (j in nv){}
for (j in nv){print(j)}
E(g)
E(g)[V(g)[v(g)$p==i] %--% V(g)[V(g)$p!=i]]
E(g)[V(g)[V(g)$p==i] %--% V(g)[V(g)$p!=i]]
length(E(g)[V(g)[V(g)$p==i] %--% V(g)[V(g)$p!=i]])
length(E(g)[V(g)[V(g)$p==i] %--% V(g)]
]
length(E(g)[V(g)[V(g)$p==i] %--% V(g)])
length(E(g)[V(g)[V(g)$p==i] %--% V(g)[V(g)$p==i])
length(E(g)[V(g)[V(g)$p==i] %--% V(g)[V(g)$p==i]])
vout = length(E(g)[V(g)[V(g)$p==i] %--% V(g)[V(g)$p!=i]])
vtotal = length(E(g)[V(g)[V(g)$p==i] %--% V(g)])
temp = temp +vout/vtotal
temp = 0
vout = length(E(g)[V(g)[V(g)$p==i] %--% V(g)[V(g)$p!=i]])
vtotal = length(E(g)[V(g)[V(g)$p==i] %--% V(g)])
temp = temp +vout/vtotal
temp
calculaMixing <- function(g){
nc = length(unique(V(g)$p))
temp = 0
for (i in 1:nc){
vout = length(E(g)[V(g)[V(g)$p==i] %--% V(g)[V(g)$p!=i]])
vtotal = length(E(g)[V(g)[V(g)$p==i] %--% V(g)])
temp = temp +vout/vtotal
}
return(temp/nc)
}
calculaMixing(g)
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
nc = length(unique(V(g)$p))
temp = 0
tamanho = vcount(g)
for (i in 1:nc){
temp = length(V(g)$p[V(G)$p==i])
if (temp<tamanho){
tamanho = temp
}
}
nc = length(unique(V(g)$p))
temp = 0
tamanho = vcount(g)
for (i in 1:nc){
temp = length(V(g)$p[V(g)$p==i])
if (temp<tamanho){
tamanho = temp
}
}
nc = length(unique(V(g)$p))
temp = 0
tamanho = vcount(g)
for (i in 1:nc){
temp = length(V(g)$p[V(g)$p==i])
print(temp)
if (temp<tamanho){
tamanho = temp
}
}
nc = length(unique(V(g)$p))
temp = 0
tamanho = 0
for (i in 1:nc){
temp = length(V(g)$p[V(g)$p==i])
if (temp>tamanho){
tamanho = temp
}
}
return(tamanho)
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
maiorComunidade(g)
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/testDynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
?test_file
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
g
g = criarGrafoInicial()
i = 1
vout = length(E(g)[V(g)[i] %--% V(g)[V(g)$p!=i]])
vtotal = degree(V(g)[i])
?degree
vtotal = degree(g,i)
vout = length(E(g)[V(g)[i] %--% V(g)[V(g)$p!=V(g)[i]$p]])
calculaMixing(g)
calculaMixing(g)
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
calculaMixing <- function(g){
temp = 0
for (i in 1:vcount(g)){
vout = length(E(g)[i %--% V(g)[V(g)$p!=V(g)[i]$p]])
vtotal = degree(g,i)
temp = temp +vout/vtotal
}
return(temp/vcount(g))
}
calculaMixing(g)
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
maiorComunidade(g)
g = born(grafoInicial)
grafoInicial = criarGrafoInicial()
g = born(grafoInicial)
idcomu = max(V(g)$p)
tamcomu = length(V(g)$p[V(g)$p==idcomu])
expect_that(vcount(g),equals(nvertices+tamcomu))
expect_that(mean(degree(g)), equals(avgdegree, tolerance=1))
expect_that(max(degree(g)),is_less_than(maxdegree+1))
mixingReal = calculaMixing(g)
expect_that(mixingReal, equals(mixing, tolerance = 0.05))
expect_that(menorComunidade(g), is_more_than(minsize-1))
expect_that(maiorComunidade(g), is_less_than(maxsize+1))
maiorComunidade(g)
tamcomu
maiorComunidade <- function(g){
nc = length(unique(V(g)$p))
temp = 0
tamanho = 0
for (i in 1:nc){
temp = length(V(g)$p[V(g)$p==i])
print(temp)
if (temp>tamanho){
tamanho = temp
}
}
return(tamanho)
}
maiorComunidade(g)
nc = length(unique(V(g)$p))
grafoInicial = criarGrafoInicial()
maiorComunidade(grafoInicial)
g = born(grafoInicial)
maiorComunidade(g)
grafoInicial = criarGrafoInicial()
maiorComunidade(grafoInicial)
g = born(grafoInicial)
maiorComunidade(g)
grafoInicial = criarGrafoInicial()
maiorComunidade(grafoInicial)
g = born(grafoInicial)
maiorComunidade(g)
aux = T
while(aux){
grafoInicial = criarGrafoInicial()
m = maiorComunidade(grafoInicial)
g = born(grafoInicial)
n = maiorComunidade(g)
if (m > maxsize){
print(m)
aux = F
}
if (n >maxsize){
print(n)
aux=F
}
}
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
aux = T
while(aux){
grafo = criarGrafoInicial()
m = max(degree(grafo))
g = born(grafo)
n = max(degree(g))
if (m > maxdegree){
print(m)
aux = F
}
if (n >maxdegree){
print(n)
aux = F
}
}
degree(grafo)
max(degree(grafo))
max(degree(g))
born <- function(g, nmin = minsize, nmax = maxsize, dmax = maxdegree, mi = mixing){
taminicial = vcount(g)
tamcomu = sample(nmin:nmax,1)
idcomu = max(V(g)$p)+1
for (i in 1:tamcomu){
g = add.vertices(g,1)
V(g)[vcount(g)]$p = idcomu
if (i==1){
g = add.edges(g,c(vcount(g),sample(1:(vcount(g)-1),1)))
}else{
grau = sample(2:(i+1),1)
if (grau > dmax){
grau = dmax
}
for (j in 1:grau){
conexao = sample(c("in","out"),1,replace=F,c(1-mi,mi))
if (conexao=="out"){
espaco = as.vector(V(g)[V(g)$p!=idcomu])
v1 = vcount(g)
v2 = sample(espaco,1)
while(degree(g,v2) > maxdegree){
v2 = sample(espaco,1)
}
g = add.edges(g,c(v1,v2))
g = simplify(g)
}
if (conexao == "in"){
espaco = as.vector(V(g)[V(g)$p==idcomu])
v1 = vcount(g)
v2 = sample(espaco,1)
while(degree(g,v2) > maxdegree){
v2 = sample(espaco,1)
}
g = add.edges(g, c(v1,v2))
g = simplify(g)
}
}
}
}
return(g)
}
born <- function(g, nmin = minsize, nmax = maxsize, dmax = maxdegree, mi = mixing){
taminicial = vcount(g)
tamcomu = sample(nmin:nmax,1)
idcomu = max(V(g)$p)+1
for (i in 1:tamcomu){
g = add.vertices(g,1)
V(g)[vcount(g)]$p = idcomu
if (i==1){
g = add.edges(g,c(vcount(g),sample(1:(vcount(g)-1),1)))
}else{
grau = sample(2:(i+1),1)
if (grau > dmax){
grau = dmax
}
for (j in 1:grau){
conexao = sample(c("in","out"),1,replace=F,c(1-mi,mi))
if (conexao=="out"){
espaco = as.vector(V(g)[V(g)$p!=idcomu])
v1 = vcount(g)
v2 = sample(espaco,1)
while(degree(g,v2) = maxdegree){
v2 = sample(espaco,1)
}
g = add.edges(g,c(v1,v2))
g = simplify(g)
}
if (conexao == "in"){
espaco = as.vector(V(g)[V(g)$p==idcomu])
v1 = vcount(g)
v2 = sample(espaco,1)
while(degree(g,v2) = maxdegree){
v2 = sample(espaco,1)
}
g = add.edges(g, c(v1,v2))
g = simplify(g)
}
}
}
}
return(g)
}
born <- function(g, nmin = minsize, nmax = maxsize, dmax = maxdegree, mi = mixing){
taminicial = vcount(g)
tamcomu = sample(nmin:nmax,1)
idcomu = max(V(g)$p)+1
for (i in 1:tamcomu){
g = add.vertices(g,1)
V(g)[vcount(g)]$p = idcomu
if (i==1){
g = add.edges(g,c(vcount(g),sample(1:(vcount(g)-1),1)))
}else{
grau = sample(2:(i+1),1)
if (grau > dmax){
grau = dmax
}
for (j in 1:grau){
conexao = sample(c("in","out"),1,replace=F,c(1-mi,mi))
if (conexao=="out"){
espaco = as.vector(V(g)[V(g)$p!=idcomu])
v1 = vcount(g)
v2 = sample(espaco,1)
while(degree(g,v2) == maxdegree){
v2 = sample(espaco,1)
}
g = add.edges(g,c(v1,v2))
g = simplify(g)
}
if (conexao == "in"){
espaco = as.vector(V(g)[V(g)$p==idcomu])
v1 = vcount(g)
v2 = sample(espaco,1)
while(degree(g,v2) == maxdegree){
v2 = sample(espaco,1)
}
g = add.edges(g, c(v1,v2))
g = simplify(g)
}
}
}
}
return(g)
}
aux = T
while(aux){
grafo = criarGrafoInicial()
m = max(degree(grafo))
g = born(grafo)
n = max(degree(g))
if (m > maxdegree){
print(m)
aux = F
}
if (n >maxdegree){
print(n)
aux = F
}
}
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
grafoInicial = criarGrafoInicial()
g = born(grafoInicial)
g = born(g)
dens = densidade(g)
tamcomu = maiorComunidade(g)
comumaxdegree = (maxdegree*tamcomu)/2
comumaxdegree = ((maxdegree*tamcomu)/2)/(tamcomu*(tamcomu-1)/2)
d = min(dens,comumaxdegree)
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
grafoInicial = criarGrafoInicial()
g = grafoInicial
dens = densidade(g)
narestasout = length(E(g)[V(g)[V(g)$p==idcomu] %--% V(g)[V(g)$p!=idcomu]])
idcomu = max(V(g)$p)
narestasout = length(E(g)[V(g)[V(g)$p==idcomu] %--% V(g)[V(g)$p!=idcomu]])
comumaxdegree = ((maxdegree*tamcomu)/2)/(tamcomu*(tamcomu-1)/2)
tamcomu = length(V(g)[V(g)$p==idcomu])
comumaxdegree = ((maxdegree*tamcomu)/2)/(tamcomu*(tamcomu-1)/2)
comumaxdegree = (((maxdegree*tamcomu)/2) - narestasout)/(tamcomu*(tamcomu-1)/2)
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
grafoInicial = criarGrafoInicial()
g = born(grafoInicial)
g = born(g)
g = born(g)
g = born(g)
g = born(g)
calculaMixing(g)
0.19 +0.03
0.2 - 0.03
aux = T
while (aux){
g = born(g)
m = calculaMixing(g)
print(m)
if ((m>(mixing+toleranciamixing)) || (m < (mixing-toleranciamixing)) ){
aux=F
}
}
unique(V(g)$p)
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
i = 2
vout = length(E(g)[i %--% V(g)[V(g)$p!=V(g)[i]$p]])
E(g)[i %--% V(g)[V(g)$p!=V(g)[i]$p]]
vtotal = degree(g,i)
vout/vtotal
temp = 0
for (i in 1:vcount(g)){
vout = length(E(g)[i %--% V(g)[V(g)$p!=V(g)[i]$p]])
vtotal = degree(g,i)
temp = temp +vout/vtotal
print(V(g)[i]$p)
print(vout/vtotal)
}
temp/vcount(g)
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
mix = calculaMixing(g)
if (mix < (mi-toleranciamixing)){
g = corrigeMixing(g,mi)
}
mi = mixing
if (mix < (mi-toleranciamixing)){
g = corrigeMixing(g,mi)
}
espaco = as.vector(V(g)[V(g)$p==idcomu])
idcomu = 3
espaco = as.vector(V(g)[V(g)$p==idcomu])
degree(g,espaco)
degree(g,espaco)[degree(g,espaco) <= maxdegree]
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
source('C:/Users/Sandy/Dropbox/2014_Sandy/DynamicCommunities/DynamicCommunities/DynamicalCommunities.R')
